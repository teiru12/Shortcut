<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원 -->
<mapper namespace="member">

	<!-- 회원 정보 입력 -->
	<insert id="insertMember" parameterType="sc.model.Member">
	<![CDATA[
		INSERT INTO
			MEMBER
		VALUES(
			MEMIDX_SEQ.NEXTVAL,
			#{ID},
			#{PASSWORD},
			#{EMAIL},
			#{NAME},
			#{NICKNAME},
			0,
			'blank.png',
			'STAY'
		)
	]]>
	</insert>

	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="sc.model.Member">
	<![CDATA[
		UPDATE
			MEMBER
		SET
			PASSWORD = #{PASSWORD},
			NAME = #{NAME},
			NICKNAME = #{NICKNAME},
			PROFILE = #{PROFILE},
			EXP = #{EXP}
		WHERE
			MEMIDX = #{MEMIDX}
	]]>           
	</update>

	<!-- 회원 상태 수정 (활동, 정지, 삭제) 추가 - 관리자용/탈퇴 - 일반회원 -->
	<update id="updateMemberStatus" parameterType="sc.model.Member">
	<![CDATA[
		UPDATE
			MEMBER
		SET
			PASSWORD = #{PASSWORD},
			NAME = #{NAME},
			NICKNAME = #{NICKNAME},
	]]>		
		<if test="PROFILE != null">
			<![CDATA[
			PROFILE = #{PROFILE},
			]]>
		</if>
	<![CDATA[
			STATUS = #{STATUS}
		WHERE
			MEMIDX = #{MEMIDX}
	]]>
	</update>

	<!-- 테스트 -->
	<!-- 메일을 받은 회원이 링크를 클릭하면 ON으로 변경 -->
	<update id="testjoin" parameterType="String">
	<![CDATA[
		UPDATE
			MEMBER
		SET
			STATUS = 'ON' 
		WHERE
			EMAIL = #{EMAIL}
	]]>
	</update>

	<!-- 회원 정보 1개 선택 (SELECT) BY MEMIDX -->
	<select id="selectMemberIDX" parameterType="int" resultType="sc.model.Member">
	<![CDATA[
		SELECT
			*
		FROM
			MEMBER
		WHERE
			MEMIDX = #{MEMIDX}	
	]]>
	</select>

	<!-- 회원 정보 1개 선택 (SELECT) BY ID -->
	<select id="selectMemberId" parameterType="String" resultType="sc.model.Member">
	<![CDATA[
		SELECT
			*
		FROM
			MEMBER
		WHERE
			ID = #{ID}	
	]]>
	</select>
	
	<!-- 회원 정보 1개 선택 (SELECT) BY 이름, 이메일 : 아이디 찾기 -->
	<select id="selectMemberFindId" parameterType="hashmap" resultType="String">
	<![CDATA[
		SELECT
			ID
		FROM
			MEMBER
		WHERE
			NAME = #{NAME}
			AND
			EMAIL = #{EMAIL}
	]]>
	</select>
	
	<!-- 회원 정보 1개 선택 (SELECT) BY 이름, 이메일, ID : 비밀번호 찾기 -->
	<select id="selectMemberFindPw" parameterType="hashmap" resultType="sc.model.Member">
	<![CDATA[
		SELECT
			*
		FROM
			MEMBER
		WHERE
			EMAIL = #{EMAIL}
			AND
			ID = #{ID}
	]]>
	</select>

	<!-- 회원 정보 리스트 페이징 -->
	<select id="memberListPaging" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			* 
		FROM (
			SELECT
				MEMIDX, ID, PASSWORD, EMAIL, NAME, NICKNAME, EXP, PROFILE, STATUS, ROWNUM R
			FROM (
				SELECT 
					MEMIDX, ID, PASSWORD, EMAIL, NAME, NICKNAME, EXP, PROFILE, STATUS
				FROM
					MEMBER
				ORDER BY MEMIDX DESC
			)
		)
		WHERE 
			R between #{START} and #{END}	
	]]>
	</select>

	<!-- 회원 정보 카운트 -->
	<select id="countMember" resultType="int">
	<![CDATA[
		SELECT
			COUNT(*)
		FROM
			MEMBER
	]]>
	</select>	

	<!-- 회원 정보 검색 페이징 -->
	<select id="memberListSearchPaging" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			* 
		FROM (
			SELECT
				MEMIDX, ID, PASSWORD, EMAIL, NAME, NICKNAME, EXP, PROFILE, STATUS, ROWNUM R
			FROM (
				SELECT 
					MEMIDX, ID, PASSWORD, EMAIL, NAME, NICKNAME, EXP, PROFILE, STATUS
				FROM
					MEMBER
				WHERE ID LIKE '%'||#{KEYWORD}||'%'
	]]>
				
				<choose>
						<when test='STATUS == "ON"'>
						<![CDATA[
							AND STATUS = 'ON'
						]]>
						</when>
						<when test='STATUS == "OFF"'>
						<![CDATA[
							AND STATUS = 'OFF'
						]]>
						</when>
						<when test='STATUS == "DEL"'>
						<![CDATA[
							AND STATUS = 'DEL'
						]]>
						</when>
						<when test='STATUS == "STAY"'>
						<![CDATA[
							AND STATUS = 'STAY'
						]]>
						</when>
						<otherwise>
						<![CDATA[
							 
						]]>
						</otherwise>
				</choose>					
				<if test="MINEXP!=NULL">
				<![CDATA[
					ORDER BY EXP
				]]>
				</if>
				<if test="MINEXP==NULL">
				<![CDATA[
					ORDER BY MEMIDX DESC
				]]>
				</if>
		<![CDATA[
			)
		)
		WHERE 
			R between #{START} and #{END}	
		]]>
		<if test="ORDER!=NULL and ORDER.equals('IDX')">
		<![CDATA[
			ORDER BY MEMIDX
		]]>
		</if>
		<if test="ORDER!=NULL and ORDER.equals('EXPASC')">
		<![CDATA[
			ORDER BY EXP
		]]>
		</if>
		<if test="ORDER!=NULL and ORDER.equals('EXPDESC')">
		<![CDATA[
			ORDER BY EXP DESC
		]]>
		</if>
	</select>
	
	<select id="memberLevelListSearchPaging" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			* 
		FROM (
			SELECT
				MEMIDX, ID, PASSWORD, EMAIL, NAME, NICKNAME, EXP, PROFILE, STATUS, ROWNUM R
			FROM (
				SELECT 
					MEMIDX, ID, PASSWORD, EMAIL, NAME, NICKNAME, EXP, PROFILE, STATUS
				FROM
					MEMBER				
	]]>
				
				<if test="LEVEL1 != null and LEVEL2 != null">
				<![CDATA[
					WHERE EXP BETWEEN #{LEVEL1} AND #{LEVEL2} 
				]]>
				</if>		
				<if test="LEVEL1 == null and LEVEL2 != null">
				<![CDATA[
					WHERE EXP <= #{LEVEL2} 
				]]>
				</if>		
				<if test="LEVEL1 != null and LEVEL2 == null">
				<![CDATA[
					WHERE EXP >= #{LEVEL1} 
				]]>
				</if>				
				<if test="LEVEL1 == null and LEVEL2 == null">
				<![CDATA[
					
				]]>
				</if>
		<![CDATA[
			)
		)
		WHERE 
			R between #{START} and #{END}	
		]]>
	</select>
	
	<!-- 회원 정보 검색 카운트 -->
	<select id="countMemberLevelSearch" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		<if test="LEVEL1 != null and LEVEL2 != null">
			<![CDATA[
				WHERE EXP BETWEEN #{LEVEL1} AND #{LEVEL2} 
			]]>
			</if>		
			<if test="LEVEL1 == null and LEVEL2 != null">
			<![CDATA[
				WHERE EXP <= #{LEVEL2} 
			]]>
			</if>		
			<if test="LEVEL1 != null and LEVEL2 == null">
			<![CDATA[
				WHERE EXP >= #{LEVEL1} 
			]]>
			</if>				
			<if test="LEVEL1 == null and LEVEL2 == null">
			<![CDATA[
					
			]]>
		</if>
	</select>

	<!-- 회원 정보 검색 카운트 -->
	<select id="countMemberSearch" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(*)
		FROM
			MEMBER
		<trim prefix="WHERE">
			<!-- 아이디 검색 : 검색어 입력 -->
			<if test="KEYWORD != NULL">
				ID LIKE '%'||#{KEYWORD}||'%'
			</if>
			<!-- 레벨범위 : 최소레벨 EXP, 최대레벨 EXP -->
			<if test="MINEXP!=NULL">
				AND EXP BETWEEN #{LEVEL1} AND #{LEVEL2}
			</if>
			<!-- 회원 상태 : 체크박스로 선택 -->
			<if test="STATUS == 'ON'">
				AND STATUS = 'ON'
			</if>
			<if test="STATUS == 'OFF'">	
				AND STATUS = 'OFF'
			</if>
			<if test="STATUS == 'DEL'">
				AND STATUS = 'DEL'
			</if>				
			<if test="STATUS == 'STAY'">
				AND STATUS = 'STAY'
			</if>				
		</trim>
	</select>
	
	<!-- 탈퇴 아이디로 회원가입할떄 -->
	<update id="updateDelMember" parameterType="sc.model.Member">
	<![CDATA[
		UPDATE
			MEMBER
		SET
			PASSWORD = #{PASSWORD},
			NAME = #{NAME},
			NICKNAME = #{NICKNAME},
			EMAIL = #{EMAIL},
			STATUS = 'STAY'
		WHERE
			ID = #{ID}
	]]>           
	</update>
	
</mapper>