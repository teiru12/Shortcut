<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 즐겨찾기 -->
<mapper namespace="bookmark">

	<!-- 회원의 즐겨찾기 단축키 리스트 페이징 -->
	<select id="bookmarkShortListPaging" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			* 
		FROM (
			SELECT B.BOOKMARKIDX, S.TYPE, S.STYPE, S.TITLE, S.CONTENT, B.ID, ROWNUM R
			  FROM SHORT S
			 INNER JOIN BOOKMARK B ON S.SHORTIDX = B.IDX
			 WHERE B.TYPE = 'SHO'
			   AND B.ID = #{ID}
			 ORDER BY B.BOOKMARKIDX DESC
			)
		WHERE 
			R between #{START} and #{END}	
	]]>
	</select>

	<!-- 회원의 즐겨찾기 단축키 카운트 -->
	<select id="countBookmarkShort" parameterType="String" resultType="int">
	<![CDATA[
		SELECT
			COUNT(*)
		FROM
			BOOKMARK
		WHERE
			ID = #{ID}
			AND
			TYPE = 'SHO'
	]]>
	</select>

	<!-- 회원의 즐겨찾기 게시판 리스트 페이징 -->
	<select id="bookmarkBoardListPaging" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
			* 
		FROM (
			SELECT TYPE, IID, NID, FID, ITITLE, NTITLE, FTITLE, BOOKMARKIDX, BID, ROWNUM R
			  FROM (
			        SELECT B.TYPE, I.ID AS IID, N.ID AS NID, F.ID AS FID, I.TITLE AS ITITLE, N.TITLE AS NTITLE, F.TITLE AS FTITLE, B.BOOKMARKIDX, B.ID AS BID
			          FROM BOOKMARK B
			          LEFT OUTER JOIN INFO I ON B.IDX = I.INFOIDX AND B.TYPE = I.TYPE
			          LEFT OUTER JOIN NEWS N ON B.IDX = N.NEWSIDX AND B.TYPE = N.TYPE
			          LEFT OUTER JOIN FREE F ON B.IDX = F.FREEIDX AND B.TYPE = F.TYPE
			         WHERE B.ID = #{ID}
			           AND B.TYPE != 'SHO'
			         ORDER BY B.BOOKMARKIDX DESC
			        )
			  )
		WHERE 
			R between #{START} and #{END}	
	]]>
	</select>

	<!-- 회원의 즐겨찾기 게시판 리스트 카운트 -->
	<select id="countBookmarkBoard" parameterType="String" resultType="int">
	<![CDATA[
		SELECT
			COUNT(*)
		FROM
			BOOKMARK
		WHERE
			ID = #{ID}
			AND
			TYPE != 'SHO'
	]]>
	</select>

	<!-- 회원의 즐겨찾기 추가 -->
	<insert id="insertBookmarkById" parameterType="sc.model.Bookmark">
	<![CDATA[
		INSERT INTO
			BOOKMARK
		VALUES(
			BOOKMARKIDX_SEQ.NEXTVAL,
			#{ID},
			#{TYPE},
			#{IDX}
		)
	]]>
	</insert>

	<!-- 회원의 즐겨찾기 삭제 -->
	<delete id="deleteBookmarkById" parameterType="int">
	<![CDATA[
		DELETE
		FROM
			BOOKMARK
		WHERE
			BOOKMARKIDX = #{BOOKMARKIDX}
	]]>
	</delete>
	
	<!-- 즐겨찾기 정보 검색 by ID, TYPE, IDX -->
	<select id="selectBookmark" parameterType="hashmap" resultType="sc.model.Bookmark">
	<![CDATA[
		SELECT
			*
		FROM
			BOOKMARK
		WHERE
			ID = #{ID}
			AND
			TYPE = #{TYPE}
			AND
			IDX = #{IDX}
	]]>
	</select>
	
	
</mapper>